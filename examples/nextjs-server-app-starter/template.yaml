---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nextjs-server-app-starter
  title: Next.js SSR Web App Starter
  description: Creates a new Next.js project with Server-Side Rendering (SSR), TypeScript, and Tailwind CSS.
  tags: [nextjs, react, web-app, frontend, ssr, starter]
spec:
  owner: group:default/team-platform-enablement
  type: website

  parameters:
    - title: Provide project details
      required:
        - name
        - description
        - owner
        - repoUrl
      properties:
        name:
          title: Project Name
          type: string
          description: Unique name for the new application. (e.g., dcbnb-booking-platform)
          ui:autofocus: true
          ui:options:
            rows: 1
        description:
          title: Description
          type: string
          description: A brief description of the new application.
        owner:
          title: Owner Team
          type: string
          description: The team or group responsible for the new application.
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: ['Group']
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts: ['github.com']

  steps:
    - id: fetch-base
      name: Fetch Base Content
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          repoUrl: ${{ parameters.repoUrl }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish-repo
      name: Publish Repository Content
      action: publish:github
      input:
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register-catalog
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-repo'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish-repo'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register-catalog'].output.entityRef }}